<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MyDBDataSet2" targetNamespace="http://tempuri.org/MyDBDataSet2.xsd" xmlns:mstns="http://tempuri.org/MyDBDataSet2.xsd" xmlns="http://tempuri.org/MyDBDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MyDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MyDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.IS5.Properties.Settings.GlobalReference.Default.MyDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BuildersTableAdapter" GeneratorDataComponentClassName="BuildersTableAdapter" Name="Builders" UserDataComponentName="BuildersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT builderId, builder, dbo.Builders.companyId, dbo.BuildersCompany.company FROM dbo.Builders INNER JOIN dbo.BuildersCompany ON dbo.Builders.companyId = dbo.BuildersCompany.companyId</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="builderId" DataSetColumn="builderId" />
              <Mapping SourceColumn="builder" DataSetColumn="builder" />
              <Mapping SourceColumn="companyId" DataSetColumn="companyId" />
              <Mapping SourceColumn="company" DataSetColumn="company" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Builders] WHERE (([builderId] = @Original_builderId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_builderId" ColumnName="builderId" DataSourceName="MyDB.dbo.Builders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_builderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="builderId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Builders] ([builder], [companyId]) VALUES (@builder, @companyId);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="builder" ColumnName="builder" DataSourceName="MyDB.dbo.Builders" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@builder" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="builder" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.Builders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Builders] SET [builder] = @builder, [companyId] = @companyId WHERE (([builderId] = @Original_builderId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="builder" ColumnName="builder" DataSourceName="MyDB.dbo.Builders" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@builder" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="builder" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.Builders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_builderId" ColumnName="builderId" DataSourceName="MyDB.dbo.Builders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_builderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="builderId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BuildersCompanyTableAdapter" GeneratorDataComponentClassName="BuildersCompanyTableAdapter" Name="BuildersCompany" UserDataComponentName="BuildersCompanyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.BuildersCompany" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BuildersCompany] WHERE (([companyId] = @Original_companyId) AND ([company] = @Original_company))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BuildersCompany] ([company]) VALUES (@company);
SELECT companyId, company FROM BuildersCompany WHERE (companyId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT companyId, company FROM dbo.BuildersCompany</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BuildersCompany] SET [company] = @company WHERE (([companyId] = @Original_companyId) AND ([company] = @Original_company));
SELECT companyId, company FROM BuildersCompany WHERE (companyId = @companyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.BuildersCompany" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="companyId" DataSetColumn="companyId" />
              <Mapping SourceColumn="company" DataSetColumn="company" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[BuildersCompany] WHERE (([companyId] = @Original_companyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.BuildersCompany" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[BuildersCompany] ([company]) VALUES (@company);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="company" ColumnName="company" DataSourceName="MyDB.dbo.BuildersCompany" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[BuildersCompany] SET [company] = @company WHERE (([companyId] = @Original_companyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="company" ColumnName="company" DataSourceName="MyDB.dbo.BuildersCompany" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.BuildersCompany" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeesTableAdapter" GeneratorDataComponentClassName="EmployeesTableAdapter" Name="Employees" UserDataComponentName="EmployeesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT employeeId, lastName, FirstName, dbo.Employees.roleId, roleName FROM dbo.Employees INNER JOIN dbo.Roles ON dbo.Employees.roleId = dbo.Roles.roleId</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="employeeId" DataSetColumn="employeeId" />
              <Mapping SourceColumn="lastName" DataSetColumn="lastName" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="roleId" DataSetColumn="roleId" />
              <Mapping SourceColumn="roleName" DataSetColumn="roleName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Employees] WHERE (([employeeId] = @Original_employeeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_employeeId" ColumnName="employeeId" DataSourceName="MyDB.dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_employeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="employeeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Employees] ([lastName], [FirstName], [roleId]) VALUES (@lastName, @FirstName, @roleId);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="lastName" ColumnName="lastName" DataSourceName="MyDB.dbo.Employees" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@lastName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="lastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FirstName" ColumnName="FirstName" DataSourceName="MyDB.dbo.Employees" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="roleId" DataSourceName="MyDB.dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Employees] SET [lastName] = @lastName, [FirstName] = @firstName, [roleId] = @roleId WHERE (([employeeId] = @Original))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="lastName" ColumnName="lastName" DataSourceName="MyDB.dbo.Employees" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@lastName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="lastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="firstName" ColumnName="FirstName" DataSourceName="MyDB.dbo.Employees" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@firstName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="roleId" DataSourceName="MyDB.dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original" ColumnName="employeeId" DataSourceName="MyDB.dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="employeeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GoodsTableAdapter" GeneratorDataComponentClassName="GoodsTableAdapter" Name="Goods" UserDataComponentName="GoodsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT goodId, goodName, amount, pricePerOne, dbo.TypeNames.typeName,  dbo.Tiers.tier, dbo.Realtors.realtor, dbo.Builders.builder, dbo.Goods.typeId, dbo.Goods.tierId, dbo.Goods.realtorId, dbo.Goods.builderId FROM dbo.Goods 
INNER JOIN dbo.TypeNames ON dbo.Goods.typeId = dbo.TypeNames.typeId
INNER JOIN dbo.Tiers ON dbo.Goods.tierId =  dbo.Tiers.tierId
INNER JOIN dbo.Realtors ON dbo.Goods.realtorId = dbo.Realtors.realtorId
INNER JOIN dbo.Builders ON dbo.Goods.builderId = dbo.Builders.builderId</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="goodId" DataSetColumn="goodId" />
              <Mapping SourceColumn="goodName" DataSetColumn="goodName" />
              <Mapping SourceColumn="amount" DataSetColumn="amount" />
              <Mapping SourceColumn="pricePerOne" DataSetColumn="pricePerOne" />
              <Mapping SourceColumn="typeId" DataSetColumn="typeId" />
              <Mapping SourceColumn="tierId" DataSetColumn="tierId" />
              <Mapping SourceColumn="realtorId" DataSetColumn="realtorId" />
              <Mapping SourceColumn="builderId" DataSetColumn="builderId" />
              <Mapping SourceColumn="typeName" DataSetColumn="typeName" />
              <Mapping SourceColumn="tier" DataSetColumn="tier" />
              <Mapping SourceColumn="realtor" DataSetColumn="realtor" />
              <Mapping SourceColumn="builder" DataSetColumn="builder" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Goods] WHERE (([goodId] = @Original_goodId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_goodId" ColumnName="goodId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_goodId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="goodId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Goods] ([goodName], [amount], [pricePerOne], [typeId], [tierId], [realtorId], [builderId]) VALUES (@goodName, @amount, @pricePerOne, @typeId, @tierId, @realtorId, @builderId);

</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="goodName" ColumnName="goodName" DataSourceName="MyDB.dbo.Goods" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@goodName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="goodName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="amount" ColumnName="amount" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@amount" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="pricePerOne" ColumnName="pricePerOne" DataSourceName="MyDB.dbo.Goods" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@pricePerOne" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="pricePerOne" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="typeId" ColumnName="typeId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@typeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="typeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="tierId" ColumnName="tierId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tierId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tierId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="realtorId" ColumnName="realtorId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@realtorId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="realtorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="builderId" ColumnName="builderId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@builderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="builderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.Goods" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT goodId FROM Goods WHERE goodName = @goodName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="goodName" ColumnName="goodName" DataSourceName="MyDB.dbo.Goods" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@goodName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="goodName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Goods] SET [goodName] = @goodName, [amount] = @amount, [pricePerOne] = @price, [typeId] = @typeId, [tierId] = @tierId, [realtorId] = @realtorId, [builderId] = @builderId WHERE (([goodId] = @Original_goodId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="goodName" ColumnName="goodName" DataSourceName="MyDB.dbo.Goods" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@goodName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="goodName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="amount" ColumnName="amount" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@amount" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="price" ColumnName="pricePerOne" DataSourceName="MyDB.dbo.Goods" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="pricePerOne" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="typeId" ColumnName="typeId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@typeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="typeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="tierId" ColumnName="tierId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tierId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tierId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="realtorId" ColumnName="realtorId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@realtorId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="realtorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="builderId" ColumnName="builderId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@builderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="builderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_goodId" ColumnName="goodId" DataSourceName="MyDB.dbo.Goods" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_goodId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="goodId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OrdersTableAdapter" GeneratorDataComponentClassName="OrdersTableAdapter" Name="Orders" UserDataComponentName="OrdersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT orderId, dbo.Employees.lastName, dbo.Orders.employeeId FROM dbo.Orders INNER JOIN dbo.Employees ON dbo.Orders.employeeId = dbo.Employees.employeeId</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="orderId" DataSetColumn="orderId" />
              <Mapping SourceColumn="employeeId" DataSetColumn="employeeId" />
              <Mapping SourceColumn="lastName" DataSetColumn="lastName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Orders] ([employeeId]) VALUES (@employeeId);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="employeeId" ColumnName="employeeId" DataSourceName="MyDB.dbo.Orders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@employeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="employeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.Orders" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="LastValueQ" Modifier="Public" Name="LastValueQ" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="LastValueQ">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT orderId FROM dbo.Orders ORDER BY orderId DESC
</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.Employees" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT dbo.Employees.lastName FROM dbo.Orders INNER JOIN dbo.Employees ON @employeeId = dbo.Employees.employeeId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="employeeId" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@employeeId" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RealtorsTableAdapter" GeneratorDataComponentClassName="RealtorsTableAdapter" Name="Realtors" UserDataComponentName="RealtorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT realtorId, realtor, dbo.Realtors.companyId, dbo.RealtorsCompany.company FROM dbo.Realtors INNER JOIN dbo.RealtorsCompany ON dbo.Realtors.companyId = dbo.RealtorsCompany.companyId</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="realtorId" DataSetColumn="realtorId" />
              <Mapping SourceColumn="realtor" DataSetColumn="realtor" />
              <Mapping SourceColumn="companyId" DataSetColumn="companyId" />
              <Mapping SourceColumn="company" DataSetColumn="company" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Realtors] WHERE (([realtorId] = @Original_realtorId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_realtorId" ColumnName="realtorId" DataSourceName="MyDB.dbo.Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_realtorId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="realtorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Realtors] ([realtor], [companyId]) VALUES (@realtor, @companyId);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="realtor" ColumnName="realtor" DataSourceName="MyDB.dbo.Realtors" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@realtor" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="realtor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Realtors] SET [realtor] = @realtor, [companyId] = @companyId WHERE (([realtorId] = @Original))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="realtor" ColumnName="realtor" DataSourceName="MyDB.dbo.Realtors" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@realtor" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="realtor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original" ColumnName="realtorId" DataSourceName="MyDB.dbo.Realtors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="realtorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RealtorsCompanyTableAdapter" GeneratorDataComponentClassName="RealtorsCompanyTableAdapter" Name="RealtorsCompany" UserDataComponentName="RealtorsCompanyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.RealtorsCompany" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RealtorsCompany] WHERE (([companyId] = @Original_companyId) AND ([company] = @Original_company))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RealtorsCompany] ([company]) VALUES (@company);
SELECT companyId, company FROM RealtorsCompany WHERE (companyId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT companyId, company FROM dbo.RealtorsCompany</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RealtorsCompany] SET [company] = @company WHERE (([companyId] = @Original_companyId) AND ([company] = @Original_company));
SELECT companyId, company FROM RealtorsCompany WHERE (companyId = @companyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_company" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.RealtorsCompany" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="companyId" DataSetColumn="companyId" />
              <Mapping SourceColumn="company" DataSetColumn="company" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[RealtorsCompany] WHERE (([companyId] = @Original_companyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.RealtorsCompany" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[RealtorsCompany] ([company]) VALUES (@company);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="company" ColumnName="company" DataSourceName="MyDB.dbo.RealtorsCompany" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[RealtorsCompany] SET [company] = @company WHERE (([companyId] = @Original_companyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="company" ColumnName="company" DataSourceName="MyDB.dbo.RealtorsCompany" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@company" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="company" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_companyId" ColumnName="companyId" DataSourceName="MyDB.dbo.RealtorsCompany" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_companyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="companyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([roleId] = @Original_roleId) AND ([roleName] = @Original_roleName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_roleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([roleName]) VALUES (@roleName);
SELECT roleId, roleName FROM Roles WHERE (roleId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@roleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT roleId, roleName FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [roleName] = @roleName WHERE (([roleId] = @Original_roleId) AND ([roleName] = @Original_roleName));
SELECT roleId, roleName FROM Roles WHERE (roleId = @roleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@roleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_roleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="roleId" DataSourceName="MyDB.dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="roleId" DataSetColumn="roleId" />
              <Mapping SourceColumn="roleName" DataSetColumn="roleName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([roleId] = @Original_roleId))
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_roleId" ColumnName="roleId" DataSourceName="MyDB.dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Roles] ([roleName]) VALUES (@roleName);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="roleName" ColumnName="roleName" DataSourceName="MyDB.dbo.Roles" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@roleName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Roles] SET [roleName] = @roleName WHERE (([userId] = @Original))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="roleName" ColumnName="roleName" DataSourceName="MyDB.dbo.Roles" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@roleName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Object" Direction="Input" ParameterName="@Original" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SavedChecksTableAdapter" GeneratorDataComponentClassName="SavedChecksTableAdapter" Name="SavedChecks" UserDataComponentName="SavedChecksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.Goods" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT dbo.Goods.goodName, pricePerOne FROM dbo.SavedChecks INNER JOIN dbo.Goods ON dbo.SavedChecks.goodId = dbo.Goods.goodId WHERE orderId = @orderId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="orderId" ColumnName="orderId" DataSourceName="MyDB.dbo.SavedChecks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@orderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="orderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="goodName" DataSetColumn="goodName" />
              <Mapping SourceColumn="pricePerOne" DataSetColumn="pricePerOne" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.SavedChecks" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetMoneyPayed" Modifier="Public" Name="GetMoneyPayed" QueryType="Scalar" ScalarCallRetval="System.Double, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetMoneyPayed">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT moneyPayed FROM SavedChecks WHERE orderId = @orderId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="orderId" ColumnName="orderId" DataSourceName="MyDB.dbo.SavedChecks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@orderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="orderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.SavedChecks" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetTimePayed" Modifier="Public" Name="GetTimePayed" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetTimePayed">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT timePayed FROM SavedChecks WHERE orderId = @orderId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="orderId" ColumnName="orderId" DataSourceName="MyDB.dbo.SavedChecks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@orderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="orderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[SavedChecks] ([orderId], [goodId], [moneyPayed], [timePayed]) VALUES (@orderId, @goodId, @moneyPayed, @timePayed);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="orderId" ColumnName="orderId" DataSourceName="MyDB.dbo.SavedChecks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@orderId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="orderId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="goodId" ColumnName="goodId" DataSourceName="MyDB.dbo.SavedChecks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@goodId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="goodId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="moneyPayed" ColumnName="moneyPayed" DataSourceName="MyDB.dbo.SavedChecks" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@moneyPayed" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="moneyPayed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timePayed" ColumnName="timePayed" DataSourceName="MyDB.dbo.SavedChecks" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@timePayed" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="timePayed" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TiersTableAdapter" GeneratorDataComponentClassName="TiersTableAdapter" Name="Tiers" UserDataComponentName="TiersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.Tiers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tiers] WHERE (([tierId] = @Original_tierId) AND ([tier] = @Original_tier))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tierId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tierId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tier" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tier" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tiers] ([tier]) VALUES (@tier);
SELECT tierId, tier FROM Tiers WHERE (tierId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tier" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tier" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT tierId, tier FROM dbo.Tiers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tiers] SET [tier] = @tier WHERE (([tierId] = @Original_tierId) AND ([tier] = @Original_tier));
SELECT tierId, tier FROM Tiers WHERE (tierId = @tierId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tier" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tierId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tierId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tier" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tier" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="tierId" ColumnName="tierId" DataSourceName="MyDB.dbo.Tiers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tierId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tierId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="tierId" DataSetColumn="tierId" />
              <Mapping SourceColumn="tier" DataSetColumn="tier" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Tiers] WHERE (([tierId] = @Original_tierId) )</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_tierId" ColumnName="tierId" DataSourceName="MyDB.dbo.Tiers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_tierId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tierId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Tiers] ([tier]) VALUES (@tier);




</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="tier" ColumnName="tier" DataSourceName="MyDB.dbo.Tiers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@tier" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="tier" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Tiers] SET [tier] = @tier WHERE (([tierId] = @Original_tierId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="tier" ColumnName="tier" DataSourceName="MyDB.dbo.Tiers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@tier" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="tier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_tierId" ColumnName="tierId" DataSourceName="MyDB.dbo.Tiers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_tierId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tierId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeNamesTableAdapter" GeneratorDataComponentClassName="TypeNamesTableAdapter" Name="TypeNames" UserDataComponentName="TypeNamesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="MyDB.dbo.TypeNames" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeNames] WHERE (([typeId] = @Original_typeId) AND ([typeName] = @Original_typeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_typeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="typeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_typeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeNames] ([typeName]) VALUES (@typeName);
SELECT typeId, typeName FROM TypeNames WHERE (typeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@typeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT typeId, typeName FROM dbo.TypeNames</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeNames] SET [typeName] = @typeName WHERE (([typeId] = @Original_typeId) AND ([typeName] = @Original_typeName));
SELECT typeId, typeName FROM TypeNames WHERE (typeId = @typeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@typeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_typeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="typeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_typeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="typeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="typeId" ColumnName="typeId" DataSourceName="MyDB.dbo.TypeNames" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@typeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="typeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="typeId" DataSetColumn="typeId" />
              <Mapping SourceColumn="typeName" DataSetColumn="typeName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[TypeNames] WHERE (([typeId] = @Original_typeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_typeId" ColumnName="typeId" DataSourceName="MyDB.dbo.TypeNames" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_typeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="typeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[TypeNames] ([typeName]) VALUES (@typeName);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="typeName" ColumnName="typeName" DataSourceName="MyDB.dbo.TypeNames" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@typeName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="typeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[TypeNames] SET [typeName] = @typeName WHERE (([typeId] = @Original))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="typeName" ColumnName="typeName" DataSourceName="MyDB.dbo.TypeNames" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@typeName" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="typeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original" ColumnName="typeId" DataSourceName="MyDB.dbo.TypeNames" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="typeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userId, userLogin, userPassword, dbo.Users.employeeId, dbo.Employees.lastName FROM dbo.Users INNER JOIN dbo.Employees ON dbo.Employees.employeeId = dbo.Users.employeeId</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userId" DataSetColumn="userId" />
              <Mapping SourceColumn="userLogin" DataSetColumn="userLogin" />
              <Mapping SourceColumn="userPassword" DataSetColumn="userPassword" />
              <Mapping SourceColumn="employeeId" DataSetColumn="employeeId" />
              <Mapping SourceColumn="lastName" DataSetColumn="lastName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([userId] = @Original_userId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_userId" ColumnName="userId" DataSourceName="MyDB.dbo.Users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Users] ([userLogin], [userPassword], [employeeId]) VALUES (@userLogin, @userPassword, @employeeId);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="userLogin" ColumnName="userLogin" DataSourceName="MyDB.dbo.Users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="userPassword" ColumnName="userPassword" DataSourceName="MyDB.dbo.Users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@userPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="userPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="employeeId" ColumnName="employeeId" DataSourceName="MyDB.dbo.Users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@employeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="employeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="MyDBConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Users] SET [userLogin] = @userLogin, [userPassword] = @userPassword, [employeeId] = @employeeId WHERE (([userId] = @Original))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="userLogin" ColumnName="userLogin" DataSourceName="MyDB.dbo.Users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="userPassword" ColumnName="userPassword" DataSourceName="MyDB.dbo.Users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@userPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="userPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="employeeId" ColumnName="employeeId" DataSourceName="MyDB.dbo.Users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@employeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="employeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original" ColumnName="userId" DataSourceName="MyDB.dbo.Users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MyDBDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="MyDBDataSet2" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MyDBDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Employees" msprop:Generator_RowEvHandlerName="EmployeesRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeesRowDeleted" msprop:Generator_RowDeletingName="EmployeesRowDeleting" msprop:Generator_RowEvArgName="EmployeesRowChangeEvent" msprop:Generator_TablePropName="Employees" msprop:Generator_RowChangedName="EmployeesRowChanged" msprop:Generator_UserTableName="Employees" msprop:Generator_RowChangingName="EmployeesRowChanging" msprop:Generator_RowClassName="EmployeesRow" msprop:Generator_TableClassName="EmployeesDataTable" msprop:Generator_TableVarName="tableEmployees">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="employeeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="employeeIdColumn" msprop:Generator_ColumnPropNameInRow="employeeId" msprop:Generator_UserColumnName="employeeId" msprop:Generator_ColumnVarNameInTable="columnemployeeId" type="xs:int" />
              <xs:element name="lastName" msprop:Generator_ColumnPropNameInTable="lastNameColumn" msprop:Generator_ColumnPropNameInRow="lastName" msprop:Generator_UserColumnName="lastName" msprop:Generator_ColumnVarNameInTable="columnlastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_UserColumnName="FirstName" msprop:Generator_ColumnVarNameInTable="columnFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="roleId" msprop:Generator_ColumnPropNameInTable="roleIdColumn" msprop:Generator_ColumnPropNameInRow="roleId" msprop:Generator_UserColumnName="roleId" msprop:Generator_ColumnVarNameInTable="columnroleId" type="xs:int" />
              <xs:element name="roleName" msprop:Generator_UserColumnName="roleName" msprop:Generator_ColumnPropNameInTable="roleNameColumn" msprop:Generator_ColumnPropNameInRow="roleName" msprop:Generator_ColumnVarNameInTable="columnroleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Orders" msprop:Generator_RowEvHandlerName="OrdersRowChangeEventHandler" msprop:Generator_RowDeletedName="OrdersRowDeleted" msprop:Generator_RowDeletingName="OrdersRowDeleting" msprop:Generator_RowEvArgName="OrdersRowChangeEvent" msprop:Generator_TablePropName="Orders" msprop:Generator_RowChangedName="OrdersRowChanged" msprop:Generator_UserTableName="Orders" msprop:Generator_RowChangingName="OrdersRowChanging" msprop:Generator_RowClassName="OrdersRow" msprop:Generator_TableClassName="OrdersDataTable" msprop:Generator_TableVarName="tableOrders">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="orderId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="orderIdColumn" msprop:Generator_ColumnPropNameInRow="orderId" msprop:Generator_UserColumnName="orderId" msprop:Generator_ColumnVarNameInTable="columnorderId" type="xs:int" />
              <xs:element name="employeeId" msprop:Generator_ColumnPropNameInTable="employeeIdColumn" msprop:Generator_ColumnPropNameInRow="employeeId" msprop:Generator_UserColumnName="employeeId" msprop:Generator_ColumnVarNameInTable="columnemployeeId" type="xs:int" />
              <xs:element name="lastName" msprop:Generator_UserColumnName="lastName" msprop:Generator_ColumnPropNameInTable="lastNameColumn" msprop:Generator_ColumnPropNameInRow="lastName" msprop:Generator_ColumnVarNameInTable="columnlastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Roles" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_TablePropName="Roles" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_UserTableName="Roles" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_RowClassName="RolesRow" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_TableVarName="tableRoles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="roleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="roleIdColumn" msprop:Generator_ColumnPropNameInRow="roleId" msprop:Generator_UserColumnName="roleId" msprop:Generator_ColumnVarNameInTable="columnroleId" type="xs:int" />
              <xs:element name="roleName" msprop:Generator_ColumnPropNameInTable="roleNameColumn" msprop:Generator_ColumnPropNameInRow="roleName" msprop:Generator_UserColumnName="roleName" msprop:Generator_ColumnVarNameInTable="columnroleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SavedChecks" msprop:Generator_RowEvHandlerName="SavedChecksRowChangeEventHandler" msprop:Generator_RowDeletedName="SavedChecksRowDeleted" msprop:Generator_RowDeletingName="SavedChecksRowDeleting" msprop:Generator_RowEvArgName="SavedChecksRowChangeEvent" msprop:Generator_TablePropName="SavedChecks" msprop:Generator_RowChangedName="SavedChecksRowChanged" msprop:Generator_UserTableName="SavedChecks" msprop:Generator_RowChangingName="SavedChecksRowChanging" msprop:Generator_RowClassName="SavedChecksRow" msprop:Generator_TableClassName="SavedChecksDataTable" msprop:Generator_TableVarName="tableSavedChecks">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="goodName" msprop:Generator_UserColumnName="goodName" msprop:Generator_ColumnPropNameInTable="goodNameColumn" msprop:Generator_ColumnPropNameInRow="goodName" msprop:Generator_ColumnVarNameInTable="columngoodName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pricePerOne" msprop:Generator_UserColumnName="pricePerOne" msprop:Generator_ColumnPropNameInTable="pricePerOneColumn" msprop:Generator_ColumnPropNameInRow="pricePerOne" msprop:Generator_ColumnVarNameInTable="columnpricePerOne" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_TablePropName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_UserTableName="Users" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_RowClassName="UsersRow" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="userIdColumn" msprop:Generator_ColumnPropNameInRow="userId" msprop:Generator_UserColumnName="userId" msprop:Generator_ColumnVarNameInTable="columnuserId" type="xs:int" />
              <xs:element name="userLogin" msprop:Generator_ColumnPropNameInTable="userLoginColumn" msprop:Generator_ColumnPropNameInRow="userLogin" msprop:Generator_UserColumnName="userLogin" msprop:Generator_ColumnVarNameInTable="columnuserLogin">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userPassword" msprop:Generator_ColumnPropNameInTable="userPasswordColumn" msprop:Generator_ColumnPropNameInRow="userPassword" msprop:Generator_UserColumnName="userPassword" msprop:Generator_ColumnVarNameInTable="columnuserPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="employeeId" msprop:Generator_ColumnPropNameInTable="employeeIdColumn" msprop:Generator_ColumnPropNameInRow="employeeId" msprop:Generator_UserColumnName="employeeId" msprop:Generator_ColumnVarNameInTable="columnemployeeId" type="xs:int" />
              <xs:element name="lastName" msprop:Generator_UserColumnName="lastName" msprop:Generator_ColumnPropNameInTable="lastNameColumn" msprop:Generator_ColumnPropNameInRow="lastName" msprop:Generator_ColumnVarNameInTable="columnlastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Builders" msprop:Generator_RowEvHandlerName="BuildersRowChangeEventHandler" msprop:Generator_RowDeletedName="BuildersRowDeleted" msprop:Generator_RowDeletingName="BuildersRowDeleting" msprop:Generator_RowEvArgName="BuildersRowChangeEvent" msprop:Generator_TablePropName="Builders" msprop:Generator_RowChangedName="BuildersRowChanged" msprop:Generator_UserTableName="Builders" msprop:Generator_RowChangingName="BuildersRowChanging" msprop:Generator_RowClassName="BuildersRow" msprop:Generator_TableClassName="BuildersDataTable" msprop:Generator_TableVarName="tableBuilders">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="builderId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="builderIdColumn" msprop:Generator_ColumnPropNameInRow="builderId" msprop:Generator_UserColumnName="builderId" msprop:Generator_ColumnVarNameInTable="columnbuilderId" type="xs:int" />
              <xs:element name="builder" msprop:Generator_ColumnPropNameInTable="builderColumn" msprop:Generator_ColumnPropNameInRow="builder" msprop:Generator_UserColumnName="builder" msprop:Generator_ColumnVarNameInTable="columnbuilder">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="companyId" msprop:Generator_ColumnPropNameInTable="companyIdColumn" msprop:Generator_ColumnPropNameInRow="companyId" msprop:Generator_UserColumnName="companyId" msprop:Generator_ColumnVarNameInTable="columncompanyId" type="xs:int" />
              <xs:element name="company" msprop:Generator_UserColumnName="company" msprop:Generator_ColumnPropNameInTable="companyColumn" msprop:Generator_ColumnPropNameInRow="company" msprop:Generator_ColumnVarNameInTable="columncompany">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BuildersCompany" msprop:Generator_RowEvHandlerName="BuildersCompanyRowChangeEventHandler" msprop:Generator_RowDeletedName="BuildersCompanyRowDeleted" msprop:Generator_RowDeletingName="BuildersCompanyRowDeleting" msprop:Generator_RowEvArgName="BuildersCompanyRowChangeEvent" msprop:Generator_TablePropName="BuildersCompany" msprop:Generator_RowChangedName="BuildersCompanyRowChanged" msprop:Generator_UserTableName="BuildersCompany" msprop:Generator_RowChangingName="BuildersCompanyRowChanging" msprop:Generator_RowClassName="BuildersCompanyRow" msprop:Generator_TableClassName="BuildersCompanyDataTable" msprop:Generator_TableVarName="tableBuildersCompany">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="companyId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="companyIdColumn" msprop:Generator_ColumnPropNameInRow="companyId" msprop:Generator_UserColumnName="companyId" msprop:Generator_ColumnVarNameInTable="columncompanyId" type="xs:int" />
              <xs:element name="company" msprop:Generator_ColumnPropNameInTable="companyColumn" msprop:Generator_ColumnPropNameInRow="company" msprop:Generator_UserColumnName="company" msprop:Generator_ColumnVarNameInTable="columncompany">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Goods" msprop:Generator_RowEvHandlerName="GoodsRowChangeEventHandler" msprop:Generator_RowDeletedName="GoodsRowDeleted" msprop:Generator_RowDeletingName="GoodsRowDeleting" msprop:Generator_RowEvArgName="GoodsRowChangeEvent" msprop:Generator_TablePropName="Goods" msprop:Generator_RowChangedName="GoodsRowChanged" msprop:Generator_UserTableName="Goods" msprop:Generator_RowChangingName="GoodsRowChanging" msprop:Generator_RowClassName="GoodsRow" msprop:Generator_TableClassName="GoodsDataTable" msprop:Generator_TableVarName="tableGoods">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="goodId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="goodIdColumn" msprop:Generator_ColumnPropNameInRow="goodId" msprop:Generator_UserColumnName="goodId" msprop:Generator_ColumnVarNameInTable="columngoodId" type="xs:int" />
              <xs:element name="goodName" msprop:Generator_ColumnPropNameInTable="goodNameColumn" msprop:Generator_ColumnPropNameInRow="goodName" msprop:Generator_UserColumnName="goodName" msprop:Generator_ColumnVarNameInTable="columngoodName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="amount" msprop:Generator_ColumnPropNameInTable="amountColumn" msprop:Generator_ColumnPropNameInRow="amount" msprop:Generator_UserColumnName="amount" msprop:Generator_ColumnVarNameInTable="columnamount" type="xs:int" />
              <xs:element name="pricePerOne" msprop:Generator_ColumnPropNameInTable="pricePerOneColumn" msprop:Generator_ColumnPropNameInRow="pricePerOne" msprop:Generator_UserColumnName="pricePerOne" msprop:Generator_ColumnVarNameInTable="columnpricePerOne" type="xs:double" />
              <xs:element name="typeId" msprop:Generator_ColumnPropNameInTable="typeIdColumn" msprop:Generator_ColumnPropNameInRow="typeId" msprop:Generator_UserColumnName="typeId" msprop:Generator_ColumnVarNameInTable="columntypeId" type="xs:int" />
              <xs:element name="tierId" msprop:Generator_ColumnPropNameInTable="tierIdColumn" msprop:Generator_ColumnPropNameInRow="tierId" msprop:Generator_UserColumnName="tierId" msprop:Generator_ColumnVarNameInTable="columntierId" type="xs:int" />
              <xs:element name="realtorId" msprop:Generator_ColumnPropNameInTable="realtorIdColumn" msprop:Generator_ColumnPropNameInRow="realtorId" msprop:Generator_UserColumnName="realtorId" msprop:Generator_ColumnVarNameInTable="columnrealtorId" type="xs:int" />
              <xs:element name="builderId" msprop:Generator_ColumnPropNameInTable="builderIdColumn" msprop:Generator_ColumnPropNameInRow="builderId" msprop:Generator_UserColumnName="builderId" msprop:Generator_ColumnVarNameInTable="columnbuilderId" type="xs:int" />
              <xs:element name="typeName" msprop:Generator_UserColumnName="typeName" msprop:Generator_ColumnPropNameInTable="typeNameColumn" msprop:Generator_ColumnPropNameInRow="typeName" msprop:Generator_ColumnVarNameInTable="columntypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="tier" msprop:Generator_UserColumnName="tier" msprop:Generator_ColumnPropNameInTable="tierColumn" msprop:Generator_ColumnPropNameInRow="tier" msprop:Generator_ColumnVarNameInTable="columntier">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="realtor" msprop:Generator_UserColumnName="realtor" msprop:Generator_ColumnPropNameInTable="realtorColumn" msprop:Generator_ColumnPropNameInRow="realtor" msprop:Generator_ColumnVarNameInTable="columnrealtor">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="builder" msprop:Generator_UserColumnName="builder" msprop:Generator_ColumnPropNameInTable="builderColumn" msprop:Generator_ColumnPropNameInRow="builder" msprop:Generator_ColumnVarNameInTable="columnbuilder">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Realtors" msprop:Generator_RowEvHandlerName="RealtorsRowChangeEventHandler" msprop:Generator_RowDeletedName="RealtorsRowDeleted" msprop:Generator_RowDeletingName="RealtorsRowDeleting" msprop:Generator_RowEvArgName="RealtorsRowChangeEvent" msprop:Generator_TablePropName="Realtors" msprop:Generator_RowChangedName="RealtorsRowChanged" msprop:Generator_UserTableName="Realtors" msprop:Generator_RowChangingName="RealtorsRowChanging" msprop:Generator_RowClassName="RealtorsRow" msprop:Generator_TableClassName="RealtorsDataTable" msprop:Generator_TableVarName="tableRealtors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="realtorId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="realtorIdColumn" msprop:Generator_ColumnPropNameInRow="realtorId" msprop:Generator_UserColumnName="realtorId" msprop:Generator_ColumnVarNameInTable="columnrealtorId" type="xs:int" />
              <xs:element name="realtor" msprop:Generator_ColumnPropNameInTable="realtorColumn" msprop:Generator_ColumnPropNameInRow="realtor" msprop:Generator_UserColumnName="realtor" msprop:Generator_ColumnVarNameInTable="columnrealtor">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="companyId" msprop:Generator_ColumnPropNameInTable="companyIdColumn" msprop:Generator_ColumnPropNameInRow="companyId" msprop:Generator_UserColumnName="companyId" msprop:Generator_ColumnVarNameInTable="columncompanyId" type="xs:int" />
              <xs:element name="company" msprop:Generator_UserColumnName="company" msprop:Generator_ColumnPropNameInTable="companyColumn" msprop:Generator_ColumnPropNameInRow="company" msprop:Generator_ColumnVarNameInTable="columncompany">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RealtorsCompany" msprop:Generator_RowEvHandlerName="RealtorsCompanyRowChangeEventHandler" msprop:Generator_RowDeletedName="RealtorsCompanyRowDeleted" msprop:Generator_RowDeletingName="RealtorsCompanyRowDeleting" msprop:Generator_RowEvArgName="RealtorsCompanyRowChangeEvent" msprop:Generator_TablePropName="RealtorsCompany" msprop:Generator_RowChangedName="RealtorsCompanyRowChanged" msprop:Generator_UserTableName="RealtorsCompany" msprop:Generator_RowChangingName="RealtorsCompanyRowChanging" msprop:Generator_RowClassName="RealtorsCompanyRow" msprop:Generator_TableClassName="RealtorsCompanyDataTable" msprop:Generator_TableVarName="tableRealtorsCompany">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="companyId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="companyIdColumn" msprop:Generator_ColumnPropNameInRow="companyId" msprop:Generator_UserColumnName="companyId" msprop:Generator_ColumnVarNameInTable="columncompanyId" type="xs:int" />
              <xs:element name="company" msprop:Generator_ColumnPropNameInTable="companyColumn" msprop:Generator_ColumnPropNameInRow="company" msprop:Generator_UserColumnName="company" msprop:Generator_ColumnVarNameInTable="columncompany">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tiers" msprop:Generator_RowEvHandlerName="TiersRowChangeEventHandler" msprop:Generator_RowDeletedName="TiersRowDeleted" msprop:Generator_RowDeletingName="TiersRowDeleting" msprop:Generator_RowEvArgName="TiersRowChangeEvent" msprop:Generator_TablePropName="Tiers" msprop:Generator_RowChangedName="TiersRowChanged" msprop:Generator_UserTableName="Tiers" msprop:Generator_RowChangingName="TiersRowChanging" msprop:Generator_RowClassName="TiersRow" msprop:Generator_TableClassName="TiersDataTable" msprop:Generator_TableVarName="tableTiers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="tierId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="tierIdColumn" msprop:Generator_ColumnPropNameInRow="tierId" msprop:Generator_UserColumnName="tierId" msprop:Generator_ColumnVarNameInTable="columntierId" type="xs:int" />
              <xs:element name="tier" msprop:Generator_ColumnPropNameInTable="tierColumn" msprop:Generator_ColumnPropNameInRow="tier" msprop:Generator_UserColumnName="tier" msprop:Generator_ColumnVarNameInTable="columntier">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeNames" msprop:Generator_RowEvHandlerName="TypeNamesRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeNamesRowDeleted" msprop:Generator_RowDeletingName="TypeNamesRowDeleting" msprop:Generator_RowEvArgName="TypeNamesRowChangeEvent" msprop:Generator_TablePropName="TypeNames" msprop:Generator_RowChangedName="TypeNamesRowChanged" msprop:Generator_UserTableName="TypeNames" msprop:Generator_RowChangingName="TypeNamesRowChanging" msprop:Generator_RowClassName="TypeNamesRow" msprop:Generator_TableClassName="TypeNamesDataTable" msprop:Generator_TableVarName="tableTypeNames">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="typeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="typeIdColumn" msprop:Generator_ColumnPropNameInRow="typeId" msprop:Generator_UserColumnName="typeId" msprop:Generator_ColumnVarNameInTable="columntypeId" type="xs:int" />
              <xs:element name="typeName" msprop:Generator_ColumnPropNameInTable="typeNameColumn" msprop:Generator_ColumnPropNameInRow="typeName" msprop:Generator_UserColumnName="typeName" msprop:Generator_ColumnVarNameInTable="columntypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employees" />
      <xs:field xpath="mstns:employeeId" />
    </xs:unique>
    <xs:unique name="Orders_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Orders" />
      <xs:field xpath="mstns:orderId" />
    </xs:unique>
    <xs:unique name="Roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:roleId" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:userId" />
    </xs:unique>
    <xs:unique name="Builders_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Builders" />
      <xs:field xpath="mstns:builderId" />
    </xs:unique>
    <xs:unique name="BuildersCompany_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BuildersCompany" />
      <xs:field xpath="mstns:companyId" />
    </xs:unique>
    <xs:unique name="Goods_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Goods" />
      <xs:field xpath="mstns:goodId" />
    </xs:unique>
    <xs:unique name="Realtors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Realtors" />
      <xs:field xpath="mstns:realtorId" />
    </xs:unique>
    <xs:unique name="RealtorsCompany_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RealtorsCompany" />
      <xs:field xpath="mstns:companyId" />
    </xs:unique>
    <xs:unique name="Tiers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tiers" />
      <xs:field xpath="mstns:tierId" />
    </xs:unique>
    <xs:unique name="TypeNames_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeNames" />
      <xs:field xpath="mstns:typeId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Employees__roleI__5EFF0ABF" msdata:parent="Roles" msdata:child="Employees" msdata:parentkey="roleId" msdata:childkey="roleId" msprop:Generator_UserParentTable="Roles" msprop:Generator_UserChildTable="Employees" msprop:Generator_RelationVarName="relationFK__Employees__roleI__5EFF0ABF" msprop:Generator_ChildPropName="GetEmployeesRows" msprop:Generator_UserRelationName="FK__Employees__roleI__5EFF0ABF" msprop:Generator_ParentPropName="RolesRow" />
      <msdata:Relationship name="FK__Orders__employee__77CAB889" msdata:parent="Employees" msdata:child="Orders" msdata:parentkey="employeeId" msdata:childkey="employeeId" msprop:Generator_UserParentTable="Employees" msprop:Generator_UserChildTable="Orders" msprop:Generator_RelationVarName="relationFK__Orders__employee__77CAB889" msprop:Generator_ChildPropName="GetOrdersRows" msprop:Generator_ParentPropName="EmployeesRow" msprop:Generator_UserRelationName="FK__Orders__employee__77CAB889" />
      <msdata:Relationship name="FK__Users__employeeI__61DB776A" msdata:parent="Employees" msdata:child="Users" msdata:parentkey="employeeId" msdata:childkey="employeeId" msprop:Generator_UserParentTable="Employees" msprop:Generator_UserChildTable="Users" msprop:Generator_RelationVarName="relationFK__Users__employeeI__61DB776A" msprop:Generator_ChildPropName="GetUsersRows" msprop:Generator_ParentPropName="EmployeesRow" msprop:Generator_UserRelationName="FK__Users__employeeI__61DB776A" />
      <msdata:Relationship name="FK__Realtors__compan__6B64E1A4" msdata:parent="RealtorsCompany" msdata:child="Realtors" msdata:parentkey="companyId" msdata:childkey="companyId" msprop:Generator_UserParentTable="RealtorsCompany" msprop:Generator_UserChildTable="Realtors" msprop:Generator_RelationVarName="relationFK__Realtors__compan__6B64E1A4" msprop:Generator_ChildPropName="GetRealtorsRows" msprop:Generator_UserRelationName="FK__Realtors__compan__6B64E1A4" msprop:Generator_ParentPropName="RealtorsCompanyRow" />
      <msdata:Relationship name="FK__Goods__typeId__7211DF33" msdata:parent="TypeNames" msdata:child="Goods" msdata:parentkey="typeId" msdata:childkey="typeId" msprop:Generator_UserParentTable="TypeNames" msprop:Generator_UserChildTable="Goods" msprop:Generator_RelationVarName="relationFK__Goods__typeId__7211DF33" msprop:Generator_ChildPropName="GetGoodsRows" msprop:Generator_UserRelationName="FK__Goods__typeId__7211DF33" msprop:Generator_ParentPropName="TypeNamesRow" />
      <msdata:Relationship name="FK__Goods__tierId__7306036C" msdata:parent="Tiers" msdata:child="Goods" msdata:parentkey="tierId" msdata:childkey="tierId" msprop:Generator_UserParentTable="Tiers" msprop:Generator_UserChildTable="Goods" msprop:Generator_RelationVarName="relationFK__Goods__tierId__7306036C" msprop:Generator_ChildPropName="GetGoodsRows" msprop:Generator_UserRelationName="FK__Goods__tierId__7306036C" msprop:Generator_ParentPropName="TiersRow" />
      <msdata:Relationship name="FK__Goods__realtorId__73FA27A5" msdata:parent="Realtors" msdata:child="Goods" msdata:parentkey="realtorId" msdata:childkey="realtorId" msprop:Generator_UserParentTable="Realtors" msprop:Generator_UserChildTable="Goods" msprop:Generator_RelationVarName="relationFK__Goods__realtorId__73FA27A5" msprop:Generator_ChildPropName="GetGoodsRows" msprop:Generator_UserRelationName="FK__Goods__realtorId__73FA27A5" msprop:Generator_ParentPropName="RealtorsRow" />
      <msdata:Relationship name="FK__Goods__builderId__74EE4BDE" msdata:parent="Builders" msdata:child="Goods" msdata:parentkey="builderId" msdata:childkey="builderId" msprop:Generator_UserParentTable="Builders" msprop:Generator_UserChildTable="Goods" msprop:Generator_RelationVarName="relationFK__Goods__builderId__74EE4BDE" msprop:Generator_ChildPropName="GetGoodsRows" msprop:Generator_ParentPropName="BuildersRow" msprop:Generator_UserRelationName="FK__Goods__builderId__74EE4BDE" />
      <msdata:Relationship name="FK__Builders__compan__688874F9" msdata:parent="BuildersCompany" msdata:child="Builders" msdata:parentkey="companyId" msdata:childkey="companyId" msprop:Generator_UserParentTable="BuildersCompany" msprop:Generator_UserChildTable="Builders" msprop:Generator_RelationVarName="relationFK__Builders__compan__688874F9" msprop:Generator_ChildPropName="GetBuildersRows" msprop:Generator_UserRelationName="FK__Builders__compan__688874F9" msprop:Generator_ParentPropName="BuildersCompanyRow" />
      <msdata:Relationship name="FK__Orders__employee__77CAB8891" msdata:parent="Users" msdata:child="Orders" msdata:parentkey="employeeId" msdata:childkey="employeeId" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="Orders" msprop:Generator_RelationVarName="relationFK__Orders__employee__77CAB8891" msprop:Generator_ChildPropName="GetOrdersRows" msprop:Generator_ParentPropName="UsersRow" msprop:Generator_UserRelationName="FK__Orders__employee__77CAB8891" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>